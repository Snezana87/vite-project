let auth,build,gitInfo,prepareWorkspace,report,restoreWorkspace,snapshot,start,storybookInfo,tunnel,upload,verify;_c0a‍.x([["runUploadBuild",()=>runUploadBuild],["runTunnelBuild",()=>runTunnelBuild],["runPatchBuild",()=>runPatchBuild],["default",()=>_c0a‍.o]]);_c0a‍.w("./auth",[["default",["auth"],function(v){auth=v}]]);_c0a‍.w("./build",[["default",["build"],function(v){build=v}]]);_c0a‍.w("./gitInfo",[["default",["gitInfo"],function(v){gitInfo=v}]]);_c0a‍.w("./prepareWorkspace",[["default",["prepareWorkspace"],function(v){prepareWorkspace=v}]]);_c0a‍.w("./report",[["default",["report"],function(v){report=v}]]);_c0a‍.w("./restoreWorkspace",[["default",["restoreWorkspace"],function(v){restoreWorkspace=v}]]);_c0a‍.w("./snapshot",[["default",["snapshot"],function(v){snapshot=v}]]);_c0a‍.w("./start",[["default",["start"],function(v){start=v}]]);_c0a‍.w("./storybookInfo",[["default",["storybookInfo"],function(v){storybookInfo=v}]]);_c0a‍.w("./tunnel",[["default",["tunnel"],function(v){tunnel=v}]]);_c0a‍.w("./upload",[["default",["upload"],function(v){upload=v}]]);_c0a‍.w("./verify",[["default",["verify"],function(v){verify=v}]]);












       const runUploadBuild = [auth, gitInfo, storybookInfo, build, upload, verify, snapshot];
       const runTunnelBuild = [auth, gitInfo, storybookInfo, start, tunnel, verify, snapshot];
       const runPatchBuild = (runBuild) => [prepareWorkspace, ...runBuild, restoreWorkspace];

const _c0a‍anonymous=(options) => {
  const runBuild = options.useTunnel ? runTunnelBuild : runUploadBuild;
  const tasks = options.patchHeadRef && options.patchBaseRef ? runPatchBuild(runBuild) : runBuild;
  return options.junitReport ? tasks.concat(report) : tasks;
};_c0a‍.d(_c0a‍anonymous);
